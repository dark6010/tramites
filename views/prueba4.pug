extends layout
block content
  //
    tam es el tamanio de las secciones debe ser enviado
    data es el arreglo de objetos que debe ser enviado
    
    
    setear sizera el actual lee el parametro enviado y le da una marca, son los valores mas usados
    setear cada th de la tabla elementos
    setear
      $scope.propertyName = 'age';
      $scope.reverse = false;
      $scope.indexini=0
    
    
  script(src="../js/angular.min.js")
  div(ng-app="listasdinamicas", ng-controller="control1")
    #sizera
      a(href="3")
        if(tam==3)
          button.btn.btn-warning(ng-click="sizera(3)") 3
        else
          button.btn.btn-success( ng-click="sizera(3)") 3
      a(href="5")
        if(tam==5)
          button.btn.btn-warning(ng-click="sizera(5)") 5
        else
          button.btn.btn-success(ng-click="sizera(5)") 5
      a(href="10")
        if(tam==10)
          button.btn.btn-warning(ng-click="sizera(10)") 10
        else
          button.btn.btn-success(ng-click="sizera(10)") 10
    table.elementos
      tr
        th
          button.btn.btn-success(ng-click="sortBy('name')") Name
          span.sortorder(ng-show="propertyName === 'name'", ng-class="{reverse: reverse}")
        th
          button.btn.btn-success(ng-click="sortBy('phone')") Phone Number
          span.sortorder(ng-show="propertyName === 'phone'", ng-class="{reverse: reverse}")
        th
          button.btn.btn-success(ng-click="sortBy('age')") Age
          span.sortorder(ng-show="propertyName === 'age'", ng-class="{reverse: reverse}")
      tr(ng-repeat="elemento in elementos | orderBy:propertyName:reverse")
        td {{elemento.name}}
        td {{elemento.phone}}
        td {{elemento.age}}
    #indexer
      - var n=0
      while n < Math.ceil(data.length/tam)
        button(ng-click="indexs("+n+")", ng-class="dinamica["+ n++ +"]") #{n}
  script.
    angular.module('listasdinamicas', [])
    .controller('control1', ['$scope', function($scope) {
      var elementos = !{JSON.stringify(data)}
      $scope.propertyName = 'age';
      $scope.reverse = false;
      $scope.indexini=0
      $scope.size=!{tam}
      ordenar()
      $scope.elementos = elementos
      $scope.dinamica=[]
      console.log(Math.ceil(elementos.length/$scope.size))
      for(var i=0; i<Math.ceil(elementos.length/$scope.size); i++){
        $scope.dinamica.push('btn btn-success')
      }
      $scope.dinamica[$scope.indexini]='btn btn-warning'
      function ordenar(){
        if($scope.reverse){
            elementos.sort(function(b, a){
            if($scope.propertyName=='name')
              return a.name.localeCompare(b.name)
            if($scope.propertyName=='phone')
              return a.phone.localeCompare(b.phone)
            if($scope.propertyName=='age')
              return a.age - b.age
            })
        }else{
            // este es el de menor a mayor
            elementos.sort(function(a, b){
            if($scope.propertyName=='name')
              return a.name.localeCompare(b.name)
            if($scope.propertyName=='phone')
              return a.phone.localeCompare(b.phone)
            if($scope.propertyName=='age')
              return a.age - b.age
            })
        }
      }
      $scope.sortBy = function(propertyName) {
        $scope.reverse = ($scope.propertyName === propertyName) ? !$scope.reverse : false;
        $scope.propertyName = propertyName;
        ordenar()
        $scope.indexs($scope.seccion)
      };
      $scope.indexs = function(seccion){
        $scope.dinamica[$scope.indexini]='btn btn-success'
        $scope.indexini=seccion
        $scope.dinamica[$scope.indexini]='btn btn-warning'
        $scope.seccion=seccion
        $scope.elementos = elementos.slice($scope.size*seccion, $scope.size*seccion+$scope.size)
      }
      $scope.seccion=0
      $scope.indexs($scope.seccion)
    }]);